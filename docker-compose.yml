# версия docker-compose (не обязательно)
version: "3.8"


# раздел описания сервисов
services:

# имя сервиса
  web:
    # путь к файлу Dockerfile
    build: .
    # команда запуска сервиса
    command: sh -c "alembic upgrade head && uvicorn app:app --reload --host=0.0.0.0 --port=8000"
    # точка монтирования для хранения информации
    volumes:
      - .:/app
    # проброс портов (port forwarding)
    ports:
      - "8000:8000"
    # проброс переменных окружения в сервис
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - SECRET_KEY=${SECRET_KEY}
      - EXPIRE_JWT=${EXPIRE_JWT}
      - ALGORITHM=${ALGORITHM}
      - TOKEN_TYPE=${TOKEN_TYPE}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
    # зависимости сервиса
    depends_on:
      - db
      - redis

  db:
    # образ для сервиса
    image: postgres:15-alpine3.18
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=dev
      - POSTGRES_DB=app
      - POSTGRES_HOST_AUTH_METHOD=trust

  redis:
    image: redis:7.0.11-alpine3.18

  worker:
    build: .
    command: celery -A src.celery:celery worker -l info
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - SECRET_KEY=${SECRET_KEY}
      - EXPIRE_JWT=${EXPIRE_JWT}
      - ALGORITHM=${ALGORITHM}
      - TOKEN_TYPE=${TOKEN_TYPE}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
    depends_on:
      - db
      - redis
